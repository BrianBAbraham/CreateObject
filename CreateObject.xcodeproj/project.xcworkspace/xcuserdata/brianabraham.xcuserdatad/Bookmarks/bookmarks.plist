<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>147</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>146</string>
					<key>Timestamp</key>
					<string>732723516.35229</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>struct DefaultMinMaxOriginDictionary {
</string>
				<key>leading</key>
				<string>

</string>
				<key>trailing</key>
				<string>    let originDic: PositionDictionary = [:]
    
    let fineOriginMinMaxDic: [PartObject: (min: PositionAsIosAxes, max: PositionAsIosAxes)] = [
</string>
			</dict>
			<key>title</key>
			<string>Development determine values from default dimensions</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectCreator.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>426</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>425</string>
					<key>Timestamp</key>
					<string>736781111.726766</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectEditVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        func xOriginModified(_ origin: PositionAsIosAxes, _ id: PartTag) -&gt; PositionAsIosAxes {
</string>
				<key>leading</key>
				<string>            
            
</string>
				<key>trailing</key>
				<string>            let mod = makeLeftAndRightMoveCloserWithNegAndApartWithPos()
           let newOrigin =
                (x: origin.x + value * mod,
</string>
			</dict>
			<key>title</key>
			<string>requires min max</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>426</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>425</string>
					<key>Timestamp</key>
					<string>736685300.082474</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            case .xOrigin, .yOrigin, .zOrigin:
</string>
				<key>leading</key>
				<string>                               max: values.max.width)
                
</string>
				<key>trailing</key>
				<string>                let values =
                    defaultMinMaxOriginDic.getDefault(
                        part,
</string>
			</dict>
			<key>title</key>
			<string>requires work only returning for .x</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>169</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>168</string>
					<key>Timestamp</key>
					<string>735758539.723039</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        DictionaryService.shared.partIdsUserEditedDicReseter()
</string>
				<key>leading</key>
				<string>        
        
</string>
				<key>trailing</key>
				<string>        
        modifyObjectByCreatingFromName()
       
</string>
			</dict>
			<key>title</key>
			<string>Development use this to not carry forward values to new objects </string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>311</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>310</string>
					<key>Timestamp</key>
					<string>735758539.723029</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        let firstSidesPresentGivesSidesAffected = 0
</string>
				<key>leading</key>
				<string>        }
//print(sidesPresent)
</string>
				<key>trailing</key>
				<string>        
       // print("getSidesPresentGivenPossibleUserEdit \(part)")
        BilateralPartWithOnePropertyToChangeService.shared.setBothOrLeftOrRightAsEditible(sidesPresent[firstSidesPresentGivesSidesAffected])
</string>
			</dict>
			<key>title</key>
			<string>cluncky</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>384</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>383</string>
					<key>Timestamp</key>
					<string>736701558.295872</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            let rotatorOrder: [Part] = [.sitOnTiltJoint, .backSupportTiltJoint]
</string>
				<key>leading</key>
				<string>        
        func orderRotatorsForMultipleRotations(_ unorderedRotators: [Part]) -&gt; [Part] {
</string>
				<key>trailing</key>
				<string>            var correctedRotatorOrder: [Part] = []
            for rotator in rotatorOrder {
                if unorderedRotators.contains(rotator) {
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT requires are more general approach</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>132</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>131</string>
					<key>Timestamp</key>
					<string>736790640.683648</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickerView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        objectEditVM.setSideToEdit(.both)
</string>
				<key>leading</key>
				<string>    func resetForNewPartEdit(){
        //what to edit
</string>
				<key>trailing</key>
				<string>        
        //what can be edited
        objectEditVM.setBothOrLeftOrRightAsEditible(.both)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT is there a problem if the part has one side?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/BilateralPartEdit.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>140</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>139</string>
					<key>Timestamp</key>
					<string>734265085.6156811</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/RulerView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                Part.joint
</string>
				<key>leading</key>
				<string>                opacity: 0.08,
                lineWidth: 0.5,
</string>
				<key>trailing</key>
				<string>            )
            
            ForEach(rulerMarksDictionary.map { key, value in (key, value) }, id: \.0) { key, value in
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT convenience part</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>686</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>685</string>
					<key>Timestamp</key>
					<string>736701558.2958601</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                rotationAxis: .yAxis //
</string>
				<key>leading</key>
				<string>                movingPoint: positionRelativeToRotator,
                angleChange: angle.x,
</string>
				<key>trailing</key>
				<string>            ).fromObjectOriginToPointWhichHasMoved + rotatorOrigin

        return   rotatedPosition
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT NEEDS TO BE ROTATOR DEPENDENT</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>730</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>729</string>
					<key>Timestamp</key>
					<string>736701558.295797</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                rotationAxis: .yAxis
</string>
				<key>leading</key>
				<string>                movingPoint: cornerPositions[index],
                angleChange: angle.x,
</string>
				<key>trailing</key>
				<string>            ).fromObjectOriginToPointWhichHasMoved
            rotatedCorners.append(
             newCornerPosition)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT needs to be rotator dependant</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>115</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>114</string>
					<key>Timestamp</key>
					<string>736519875.395723</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/MovementImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            newValues = CreateIosPosition.addToupleToArrayOfTouples(
</string>
				<key>leading</key>
				<string>            )
            
</string>
				<key>trailing</key>
				<string>                (
                    x: 0.0,
                    y: 0.0,
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT control on top or below</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>265</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>264</string>
					<key>Timestamp</key>
					<string>736797322.9804161</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                movement
</string>
				<key>leading</key>
				<string>                dictionaryForScreen,
                objectFrameSize,
</string>
				<key>trailing</key>
				<string>            )
            .position(recenterPosition)
            .onChange(of: recenterVM.getRecenterState()) {
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT THIS IS FOR IPHONE REMOVE FOR IPAD</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>107</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>106</string>
					<key>Timestamp</key>
					<string>735902421.010705</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/KeepImageInScreen.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func getObjectOnScreenFrameSize ()
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>        -&gt; Dimension {
        let objectDimension = objectDimension
        var frameSize: Dimension =
</string>
			</dict>
			<key>title</key>
			<string>DEVELPMENT this was written to allow screen rotation is it necessary?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>35</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>34</string>
					<key>Timestamp</key>
					<string>735757638.297768</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/KeepImageInScreen.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                let scaleFactor = 1.0
</string>
				<key>leading</key>
				<string>                _ offset: PositionAsIosAxes)
            -&gt; CornerDictionary {
</string>
				<key>trailing</key>
				<string>                var postTiltObjectToPartFourCornerAllPositivePerKeyDic: CornerDictionary = [:]
                for item in actualSizeDic {
                    var positivePositions: [PositionAsIosAxes] = []
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT no scale applied</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>70</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>69</string>
					<key>Timestamp</key>
					<string>736517153.775153</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/MovementImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        let name = PartTag.staticPoint.rawValue + "_id" + String(objectIndex) + PartTag.stringLink.rawValue
</string>
				<key>leading</key>
				<string>    
    mutating func updateDicForStaticPoint(_ objectIndex: Int, _ staticPoint: PositionAsIosAxes){
</string>
				<key>trailing</key>
				<string>        
        
        let p = staticPoint
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT make name automatic</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>384</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>383</string>
					<key>Timestamp</key>
					<string>736796924.230128</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/MovementPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>//    func createStaticPointTurnDictionary(_ dictionary: CornerDictionary) -&gt; CornerDictionary {
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>//        let dic =
//        dictionary.filter{$0.key.contains(PartTag.staticPoint.rawValue)}
//    // print(dic)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT update for slalom</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>88</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>87</string>
					<key>Timestamp</key>
					<string>736516393.418758</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ArcViM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                let firstPointName = orderedPrefixNames[0] + name
</string>
				<key>leading</key>
				<string>            for name in namesWithoutPrefix {
                
</string>
				<key>trailing</key>
				<string>                let secondPointName = orderedPrefixNames[1] + name
                guard let firstPointValue = movementDictionaryForScreen[firstPointName] else {
                    fatalError("\(names)")
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT change for slalom</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>59</string>
					<key>EndingLineNumber</key>
					<string>235</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>235</string>
					<key>Timestamp</key>
					<string>736798008.846307</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectCreator.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func getLinkedOrParentPart(_ childPart: Part) -&gt; Part {</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>
        /// a part may have a physical parent part
        /// or a part which  it is linked to
</string>
			</dict>
			<key>title</key>
			<string>defaults are determined on one depenancy code alteration required for more than one dependancy</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>753</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>752</string>
					<key>Timestamp</key>
					<string>736791175.684656</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/PartDefaults.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        let fixedWheelHeight = PartDefaultDimension.fixedWheelDimension.height / 2.0
</string>
				<key>leading</key>
				<string>        let casterHeight =
            PartDefaultDimension.casterForkDimension.height + PartDefaultDimension.casterWheelDimension.height
</string>
				<key>trailing</key>
				<string>        var origin = ZeroValue.iosLocation
        let linkedOrParentWidth = linkedOrParentDimensionUsingOneValue.width
        let linkedOrParentLength = linkedOrParentDimensionUsingOneValue.length
</string>
			</dict>
			<key>title</key>
			<string>Static caster joint and fixed wheel height</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
