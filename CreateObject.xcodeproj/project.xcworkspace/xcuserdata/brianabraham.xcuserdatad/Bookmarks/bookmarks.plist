<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>147</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>146</string>
					<key>Timestamp</key>
					<string>732723516.35229</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectDefaults.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>struct DefaultMinMaxOriginDictionary {
</string>
				<key>leading</key>
				<string>

</string>
				<key>trailing</key>
				<string>    let originDic: PositionDictionary = [:]
    
    let fineOriginMinMaxDic: [PartObject: (min: PositionAsIosAxes, max: PositionAsIosAxes)] = [
</string>
			</dict>
			<key>title</key>
			<string>Development determine values from default dimensions</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectCreator.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>387</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>386</string>
					<key>Timestamp</key>
					<string>734275962.785318</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectEditVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        func xOriginModified(_ origin: PositionAsIosAxes, _ id: PartTag) -&gt; PositionAsIosAxes {
</string>
				<key>leading</key>
				<string>        
            
</string>
				<key>trailing</key>
				<string>            let mod = makeLeftAndRightMoveCloserWithNegAndApartWithPos()
           let newOrigin =
                (x: origin.x + value * mod,
</string>
			</dict>
			<key>title</key>
			<string>requires min max</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>419</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>418</string>
					<key>Timestamp</key>
					<string>734882039.309749</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            case .xOrigin, .yOrigin, .zOrigin:
</string>
				<key>leading</key>
				<string>                               max: values.max.width)
                
</string>
				<key>trailing</key>
				<string>                let values =
                    defaultMinMaxOriginDic.getDefault(
                        part,
</string>
			</dict>
			<key>title</key>
			<string>requires work only returning for .x</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>271</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>270</string>
					<key>Timestamp</key>
					<string>734275962.785349</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectEditVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            if part == .fixedWheelAtRearWithPropeller {
</string>
				<key>leading</key>
				<string>            
            var ignoreFirstItem = 1 // relevant part subsequent
</string>
				<key>trailing</key>
				<string>                ignoreFirstItem += 1
            }
            for index in ignoreFirstItem..&lt;partChain.count {
</string>
			</dict>
			<key>title</key>
			<string>Development bit of a hack</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>160</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>159</string>
					<key>Timestamp</key>
					<string>734882039.309705</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        DictionaryService.shared.partIdsUserEditedDicReseter()
</string>
				<key>leading</key>
				<string>        
        
</string>
				<key>trailing</key>
				<string>        
        modifyObjectByCreatingFromName()
       
</string>
			</dict>
			<key>title</key>
			<string>Development use this to not carry forward values to new objects </string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>302</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>301</string>
					<key>Timestamp</key>
					<string>734882039.309759</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickVM.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        let firstSidesPresentGivesSidesAffected = 0
</string>
				<key>leading</key>
				<string>        }
//print(sidesPresent)
</string>
				<key>trailing</key>
				<string>        
       // print("getSidesPresentGivenPossibleUserEdit \(part)")
        BilateralPartWithOnePropertyToChangeService.shared.setBothOrLeftOrRightAsEditible(sidesPresent[firstSidesPresentGivesSidesAffected]
</string>
			</dict>
			<key>title</key>
			<string>cluncky</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>370</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>369</string>
					<key>Timestamp</key>
					<string>734626844.342281</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            let rotatorOrder: [Part] = [.sitOnTiltJoint, .backSupportTiltJoint]
</string>
				<key>leading</key>
				<string>        
        func orderRotatorsForMultipleRotations(_ unorderedRotators: [Part]) -&gt; [Part] {
</string>
				<key>trailing</key>
				<string>            var correctedRotatorOrder: [Part] = []
            for rotator in rotatorOrder {
                if unorderedRotators.contains(rotator) {
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT requires are more general approach</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>613</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>612</string>
					<key>Timestamp</key>
					<string>732798506.519421</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectCreator.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func getDictionaryValue(_ dictionary: [String: PositionAsIosAxes ])
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    -&gt; OneOrTwo&lt;PositionAsIosAxes&gt;{
        switch self {
        case .two(let left, let right):
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT combine as one</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>679</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>678</string>
					<key>Timestamp</key>
					<string>732798506.519452</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectCreator.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    var one: T? {
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>        switch self {
        case .two:
            return nil
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT can this be removed with recoding</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>116</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>115</string>
					<key>Timestamp</key>
					<string>734115230.620867</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectPickerView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        objectEditVM.setSideToEdit(.both)
</string>
				<key>leading</key>
				<string>    func resetForNewPartEdit(){
        //what to edit
</string>
				<key>trailing</key>
				<string>        
        //what can be edited
        objectEditVM.setBothOrLeftOrRightAsEditible(.both)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT is there a problem if the part has one side?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/BilateralPartEdit.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>140</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>139</string>
					<key>Timestamp</key>
					<string>734265085.6156811</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/RulerView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                Part.joint
</string>
				<key>leading</key>
				<string>                opacity: 0.08,
                lineWidth: 0.5,
</string>
				<key>trailing</key>
				<string>            )
            
            ForEach(rulerMarksDictionary.map { key, value in (key, value) }, id: \.0) { key, value in
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT convenience part</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>62</string>
					<key>StartingColumnNumber</key>
					<string>87</string>
					<key>StartingLineNumber</key>
					<string>61</string>
					<key>Timestamp</key>
					<string>734373179.8156281</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/PositionTransformation.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>ht: [PositionAsIosAxes]) {
</string>
				<key>leading</key>
				<string>    

//    static func removeInteriorPoints(_ positionsLeft: [PositionAsIosAxes], positionsRig</string>
				<key>trailing</key>
				<string>//
//        
//        let leftSides = getSides(positionsLeft)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT assume a rectangle</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>672</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>671</string>
					<key>Timestamp</key>
					<string>734626844.342325</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                rotationAxis: .yAxis //
</string>
				<key>leading</key>
				<string>                movingPoint: positionRelativeToRotator,
                angleChange: angle.x,
</string>
				<key>trailing</key>
				<string>            ).fromObjectOriginToPointWhichHasMoved + rotatorOrigin

        return   rotatedPosition
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT NEEDS TO BE ROTATOR DEPENDENT</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>716</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>715</string>
					<key>Timestamp</key>
					<string>734626844.3423131</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/ObjectImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                rotationAxis: .yAxis
</string>
				<key>leading</key>
				<string>                movingPoint: cornerPositions[index],
                angleChange: angle.x,
</string>
				<key>trailing</key>
				<string>            ).fromObjectOriginToPointWhichHasMoved
            rotatedCorners.append(
             newCornerPosition)
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT needs to be rotator dependant</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>104</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>103</string>
					<key>Timestamp</key>
					<string>734863075.370452</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/CreateObject/MovementImageData.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            newValues = CreateIosPosition.addToupleToArrayOfTouples(
</string>
				<key>leading</key>
				<string>            )
            
</string>
				<key>trailing</key>
				<string>                (
                    x: 0.0,
                    y: 0.0,
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT control on top or below</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>215</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>214</string>
					<key>Timestamp</key>
					<string>734890455.098196</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ObjectView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        self.origin = CGPoint(x: originOfObject.x + objectOriginToRotationPoint, y: originOfObject.y)
</string>
				<key>leading</key>
				<string>    init(_ position: [PositionAsIosAxes], _ originOfObject: PositionAsIosAxes){
        self.position = position
</string>
				<key>trailing</key>
				<string>        point1 = CGPoint( x: position[0].x, y: position[0].y)
        point2 = CGPoint( x: position[1].x, y: position[1].y)
    }
</string>
			</dict>
			<key>title</key>
			<string>the rotation origin needs to be added dynamicall</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>120</string>
					<key>StartingColumnNumber</key>
					<string>24</string>
					<key>StartingLineNumber</key>
					<string>119</string>
					<key>Timestamp</key>
					<string>734894808.0239429</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>
</string>
				<key>leading</key>
				<string>        }
        
        NavigationView {</string>
				<key>trailing</key>
				<string>            VStack {
                NavigationLink(destination:
                        AllViews()
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT ipad will show menu items on screen at once</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>208</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>207</string>
					<key>Timestamp</key>
					<string>734900258.846928</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>CreateObject/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                    .none
</string>
				<key>leading</key>
				<string>                    dictionaryForScreen,
                    objectFrameSize,
</string>
				<key>trailing</key>
				<string>                )
                .position(recenterPosition)
                .onChange(of: recenterVM.getRecenterState()) {
</string>
			</dict>
			<key>title</key>
			<string>DEVELOPMENT THIS IS FOR IPHONE REMOVE FOR IPAD</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
